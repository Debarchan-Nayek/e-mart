{"ast":null,"code":"import _slicedToArray from\"C:/Users/KIIT/Desktop/e-mart/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{savePaymentMethod}from'../../actions/cartAction';import CheckoutSteps from'../../components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PaymentPage=function PaymentPage(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var dispatch=useDispatch();var _useState=useState('paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var submitHandler=function submitHandler(e){dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Payment Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",value:\"paypal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{onClick:submitHandler,children:\"Continue\"})]})]});};export default PaymentPage;","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/pages/PaymentPage/index.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","savePaymentMethod","CheckoutSteps","PaymentPage","history","cart","state","shippingAddress","push","dispatch","paymentMethod","setPaymentMethod","submitHandler","e","target","value"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,C,6IAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CAC7B,GAAMC,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEF,GAAG,CAACA,eAAJ,CAAoB,CAChBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CACD,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,cAA0CJ,QAAQ,CAAC,QAAD,CAAlD,wCAAOe,aAAP,eAAsBC,gBAAtB,eACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBJ,QAAQ,CAACR,iBAAiB,CAACS,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACI,IAAR,CAAa,aAAb,EACH,CAHD,CAIF,mBACE,wCACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,sCAFF,cAGE,MAAC,IAAD,yBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,mCADF,cAEE,KAAC,GAAD,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,uBAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,KAAK,CAAC,QALR,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACK,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,EAFF,GADF,cAwBE,KAAC,MAAD,EAAQ,OAAO,CAAEH,aAAjB,sBAxBF,GAHF,GADF,CAiCA,CA9CF,CAgDA,cAAeT,CAAAA,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from '../../actions/cartAction'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\n\r\nconst PaymentPage = ({history}) => {\r\n      const cart = useSelector((state) => state.cart);\r\n      const { shippingAddress } = cart;\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('paypal')\r\n    const submitHandler = (e) => {\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder')\r\n    }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"paypal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"stripe\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button onClick={submitHandler}>Continue</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default PaymentPage"]},"metadata":{},"sourceType":"module"}