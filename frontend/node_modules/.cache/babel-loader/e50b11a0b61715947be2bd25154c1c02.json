{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAILURE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAILURE, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    }); // dispatch({\n    //     type: USER_LOGIN_SUCCESS,\n    //     payload: data,\n    // })\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/actions/userAction.js"],"names":["axios","USER_DETAILS_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAILURE","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","logout","dispatch","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  USER_DETAILS_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILURE,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n}\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {headers: {'Content-Type': 'application/json'}}\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch(error){\r\n                dispatch({\r\n                  type: USER_LOGIN_FAILURE,\r\n                  payload:\r\n                    error.response && error.response.data.message\r\n                      ? error.response.data.message\r\n                      : error.message,\r\n                });\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    // dispatch({\r\n    //     type: USER_LOGIN_SUCCESS,\r\n    //     payload: data,\r\n    // })\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) => {\r\n  try{\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    })\r\n    const {userLogin: {userInfo}} = getState()\r\n    const config = {\r\n     headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${userInfo.token}`\r\n    },\r\n  };\r\n  \r\n  const {data} = await axios.get(`/api/users/${id}`, config)\r\n  dispatch({\r\n    type: USER_DETAILS_SUCCESS,\r\n    payload: data\r\n  });\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: USER_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}