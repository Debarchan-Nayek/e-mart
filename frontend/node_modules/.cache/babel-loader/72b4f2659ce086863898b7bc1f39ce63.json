{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { USER_DETAILS_FAILURE, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAILURE, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAILURE, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAILURE, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAILURE, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_FAILURE, USER_DELETE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_FAILURE, USER_UPDATE_SUCCESS } from \"../constants/userConstants\";\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    console.log(data);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/users/${id}`, config);\n    console.log(data);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/actions/userAction.js"],"names":["axios","ORDER_LIST_MY_RESET","USER_DETAILS_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_FAILURE","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LOGIN_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAILURE","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAILURE","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_FAILURE","USER_DELETE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_FAILURE","USER_UPDATE_SUCCESS","logout","dispatch","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","console","log","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\nimport {\r\n  USER_DETAILS_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAILURE,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILURE,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILURE,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FAILURE,\r\n  USER_DELETE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FAILURE,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {headers: {'Content-Type': 'application/json'}}\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch(error){\r\n                dispatch({\r\n                  type: USER_LOGIN_FAILURE,\r\n                  payload:\r\n                    error.response && error.response.data.message\r\n                      ? error.response.data.message\r\n                      : error.message,\r\n                });\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n \r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) => {\r\n  try{\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    })\r\n    const {userLogin: {userInfo}} = getState()\r\n    const config = {\r\n     headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${userInfo.token}`\r\n    },\r\n  };\r\n  \r\n  const {data} = await axios.get(`/api/users/${id}`, config)\r\n  dispatch({\r\n    type: USER_DETAILS_SUCCESS,\r\n    payload: data\r\n  });\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: USER_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\r\n  try{\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    })\r\n    const {userLogin:{userInfo}} = getState()\r\n    const config = {\r\n     headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${userInfo.token}`\r\n    },\r\n  };\r\n  const {data} = await axios.put(`api/users/profile`, user, config)\r\n  \r\n  dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS, \r\n      payload: data\r\n    })\r\n\r\n  dispatch({\r\n    type: USER_LOGIN_SUCCESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n  }catch(error){\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAILURE,\r\n       payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users`, config);\r\n    console.log(data);\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/api/users/${id}`, config);\r\n    console.log(data);\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(`/api/users/${user._id}`,user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n    \r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data})\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}