{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconsole.log(localStorage.getItem(\"cartItems\"));\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","cartReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","cartItemsFromStorage","console","log","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,QAIO,wBAJP;AAKA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAiF,IAA7G;AAGA,MAAMG,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,WAAW,EAAEZ,kBADiB;AAE9Ba,EAAAA,cAAc,EAAEZ,qBAFc;AAG9Ba,EAAAA,IAAI,EAAET,WAHwB;AAI9BU,EAAAA,SAAS,EAAEb,gBAJmB;AAK9Bc,EAAAA,YAAY,EAAEb,mBALgB;AAM9Bc,EAAAA,WAAW,EAAEb;AANiB,CAAD,CAA/B;AASA,MAAMc,oBAAoB,GAAGX,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIAW,OAAO,CAACC,GAAR,CAAYb,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AAEA,MAAMa,YAAY,GAAG;AACnBP,EAAAA,IAAI,EAAE;AAAEQ,IAAAA,SAAS,EAAEJ;AAAb,GADa;AAEnBH,EAAAA,SAAS,EAAE;AAACT,IAAAA;AAAD;AAFQ,CAArB;AAIA,MAAMiB,UAAU,GAAG,CAACzB,KAAD,CAAnB;AACA,MAAM0B,KAAK,GAAG7B,WAAW,CACrBgB,OADqB,EAErBU,YAFqB,EAGrBtB,mBAAmB,CAACF,eAAe,CAAC,GAAG0B,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducer\"; \r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n} from \"./reducers/userReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconsole.log(localStorage.getItem(\"cartItems\"));\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n  userLogin: {userInfoFromStorage}\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    );\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}