{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n}); // const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//   : [];\n\nconsole.log(typeof localStorage.getItem(\"cartItems\"));\nconst initialState = {\n  cart: {\n    cartItems: []\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","console","log","localStorage","getItem","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SAASC,WAAT,QAA4B,wBAA5B;AAGA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEJ,kBADiB;AAE9BK,EAAAA,cAAc,EAAEJ,qBAFc;AAG9BK,EAAAA,IAAI,EAACJ;AAHyB,CAAD,CAA/B,C,CAMA;AACA;AACA;;AAEAK,OAAO,CAACC,GAAR,CAAY,OAAOC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAAE;AAAEM,IAAAA,SAAS,EAAE;AAAb;AADa,CAArB;AAGA,MAAMC,UAAU,GAAG,CAACf,KAAD,CAAnB;AACA,MAAMgB,KAAK,GAAGnB,WAAW,CACrBQ,OADqB,EAErBQ,YAFqB,EAGrBZ,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducer\"; \r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart:cartReducer,\r\n});\r\n\r\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n//   : [];\r\n\r\nconsole.log(typeof localStorage.getItem(\"cartItems\"));\r\n\r\nconst initialState = {\r\n  cart: { cartItems: [] },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    );\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}