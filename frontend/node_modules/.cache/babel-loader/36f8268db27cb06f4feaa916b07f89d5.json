{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer } from \"./reducers/productReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/userReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { orderReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from \"./reducers/orderReducer\";\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productCreateReview: productCreateReviewReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconsole.log(localStorage.getItem(\"cartItems\"));\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/e-mart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productCreateReviewReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartReducer","orderReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productCreateReview","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","console","log","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,0BANF,QAOO,2BAPP;AAQA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,wBARP;AASA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,mBANF,QAOO,yBAPP;AASA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAiF,IAA7G;AAEA,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAEA,MAAMI,OAAO,GAAG9B,eAAe,CAAC;AAC9B+B,EAAAA,WAAW,EAAE3B,kBADiB;AAE9B4B,EAAAA,cAAc,EAAE3B,qBAFc;AAG9B4B,EAAAA,aAAa,EAAE3B,oBAHe;AAI9B4B,EAAAA,aAAa,EAAE3B,oBAJe;AAK9B4B,EAAAA,aAAa,EAAE3B,oBALe;AAM9B4B,EAAAA,mBAAmB,EAAG3B,0BANQ;AAO9B4B,EAAAA,IAAI,EAAEpB,WAPwB;AAQ9BqB,EAAAA,SAAS,EAAE5B,gBARmB;AAS9B6B,EAAAA,YAAY,EAAE5B,mBATgB;AAU9B6B,EAAAA,WAAW,EAAE5B,kBAViB;AAW9B6B,EAAAA,iBAAiB,EAAE5B,wBAXW;AAY9B6B,EAAAA,QAAQ,EAAE5B,eAZoB;AAa9B6B,EAAAA,UAAU,EAAE5B,iBAbkB;AAc9B6B,EAAAA,UAAU,EAAE5B,iBAdkB;AAe9B6B,EAAAA,WAAW,EAAE3B,YAfiB;AAgB9B4B,EAAAA,YAAY,EAAE3B,mBAhBgB;AAiB9B4B,EAAAA,QAAQ,EAAE3B,eAjBoB;AAkB9B4B,EAAAA,WAAW,EAAE3B,kBAlBiB;AAmB9B4B,EAAAA,SAAS,EAAE3B,gBAnBmB;AAoB9B4B,EAAAA,YAAY,EAAE3B;AApBgB,CAAD,CAA/B;AAuBA,MAAM4B,oBAAoB,GAAG1B,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA0B,OAAO,CAACC,GAAR,CAAY5B,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AAEA,MAAM4B,YAAY,GAAG;AACnBjB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,SAAS,EAAEJ,oBADP;AAEJK,IAAAA,eAAe,EAAE3B;AAFb,GADa;AAKnBS,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEjC;AAAZ;AALQ,CAArB;AAOA,MAAMkC,UAAU,GAAG,CAACxD,KAAD,CAAnB;AACA,MAAMyD,KAAK,GAAG5D,WAAW,CACrB+B,OADqB,EAErBwB,YAFqB,EAGrBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productCreateReviewReducer,\r\n} from \"./reducers/productReducer\"; \r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  orderReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productCreateReview : productCreateReviewReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconsole.log(localStorage.getItem(\"cartItems\"));\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    );\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}