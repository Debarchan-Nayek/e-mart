[{"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\index.js":"1","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\App.js":"2","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Footer\\index.js":"4","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\NavBar\\index.js":"5","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Home\\index.js":"6","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\index.js":"7","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\rating.js":"8","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductDetails\\index.js":"9","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\data\\products.js":"10","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\store.js":"11","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\productReducer.js":"12","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Loader\\index.js":"15","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Message\\index.js":"16","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\CartPage\\index.js":"17","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\cartReducer.js":"18","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\cartAction.js":"20","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\userReducer.js":"21","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Login\\index.js":"23","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\userAction.js":"24","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\FormContainer\\index.js":"25","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Register\\index.js":"26","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProfilePage\\index.js":"27","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ShippingPage\\index.js":"28","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\CheckoutSteps\\index.js":"29","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\PaymentPage\\index.js":"30","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\orderReducer.js":"31","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderPage\\index.js":"33","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\orderAction.js":"34","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderDetailsPage\\index.js":"35","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\UserList\\index.js":"36","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\UserEditPage\\index.js":"37","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductListPage\\index.js":"38","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductEditPage\\index.js":"39","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderList\\index.js":"40"},{"size":646,"mtime":1628189073846,"results":"41","hashOfConfig":"42"},{"size":2162,"mtime":1635440986695,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"42"},{"size":505,"mtime":1628418780855,"results":"45","hashOfConfig":"42"},{"size":2731,"mtime":1634815089105,"results":"46","hashOfConfig":"42"},{"size":1012,"mtime":1628225108038,"results":"47","hashOfConfig":"42"},{"size":874,"mtime":1628003565472,"results":"48","hashOfConfig":"42"},{"size":2457,"mtime":1628002737295,"results":"49","hashOfConfig":"42"},{"size":6611,"mtime":1635614827045,"results":"50","hashOfConfig":"42"},{"size":2520,"mtime":1627966809343,"results":"51","hashOfConfig":"42"},{"size":2371,"mtime":1635602498279,"results":"52","hashOfConfig":"42"},{"size":3969,"mtime":1635614219574,"results":"53","hashOfConfig":"42"},{"size":1415,"mtime":1635602401306,"results":"54","hashOfConfig":"42"},{"size":4700,"mtime":1635602861530,"results":"55","hashOfConfig":"42"},{"size":313,"mtime":1628222291736,"results":"56","hashOfConfig":"42"},{"size":221,"mtime":1628434186238,"results":"57","hashOfConfig":"42"},{"size":3764,"mtime":1628347057239,"results":"58","hashOfConfig":"42"},{"size":1336,"mtime":1628740960973,"results":"59","hashOfConfig":"42"},{"size":240,"mtime":1628740263011,"results":"60","hashOfConfig":"42"},{"size":1235,"mtime":1628740886405,"results":"61","hashOfConfig":"42"},{"size":3831,"mtime":1635005685744,"results":"62","hashOfConfig":"42"},{"size":1574,"mtime":1634992677504,"results":"63","hashOfConfig":"42"},{"size":2196,"mtime":1628789981939,"results":"64","hashOfConfig":"42"},{"size":6368,"mtime":1635005845503,"results":"65","hashOfConfig":"42"},{"size":368,"mtime":1628418427235,"results":"66","hashOfConfig":"42"},{"size":3369,"mtime":1628433967819,"results":"67","hashOfConfig":"42"},{"size":5742,"mtime":1634466484037,"results":"68","hashOfConfig":"42"},{"size":2659,"mtime":1628869949812,"results":"69","hashOfConfig":"42"},{"size":1416,"mtime":1628739621515,"results":"70","hashOfConfig":"42"},{"size":1710,"mtime":1628870029081,"results":"71","hashOfConfig":"42"},{"size":3560,"mtime":1635512570534,"results":"72","hashOfConfig":"42"},{"size":1281,"mtime":1635445453900,"results":"73","hashOfConfig":"42"},{"size":5176,"mtime":1628834530102,"results":"74","hashOfConfig":"42"},{"size":5162,"mtime":1635513101395,"results":"75","hashOfConfig":"42"},{"size":7445,"mtime":1635516255946,"results":"76","hashOfConfig":"42"},{"size":3106,"mtime":1635138135322,"results":"77","hashOfConfig":"42"},{"size":3424,"mtime":1635219567549,"results":"78","hashOfConfig":"42"},{"size":3782,"mtime":1635351348178,"results":"79","hashOfConfig":"42"},{"size":6056,"mtime":1635357273476,"results":"80","hashOfConfig":"42"},{"size":2753,"mtime":1635516130118,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1u4fqdh",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\index.js",[],["173","174"],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\App.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Footer\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\NavBar\\index.js",["175"],"import React from \"react\";\r\nimport { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { FaShoppingCart, FaUser } from 'react-icons/fa';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './style.css';\r\nimport { logout } from \"../../actions/userAction\";\r\n\r\nconst NavBar = (props) => {\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"nav-bar\"\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        collapseOnSelect\r\n        className=\"p-4\"\r\n      >\r\n        <Container fluid>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>E-Mart</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n          <Navbar.Collapse\r\n            className=\"justify-content-end\"\r\n            id=\"basic-navbar-nav\"\r\n          >\r\n            <Nav>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"navLink\">\r\n                  <FaShoppingCart />\r\n                  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link className=\"navLink\">\r\n                    <FaUser /> Signin\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Home\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\rating.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductDetails\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\data\\products.js",[],["176","177"],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\store.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Loader\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Message\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\CartPage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Login\\index.js",["178"],"import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {login} from '../../actions/userAction'\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst Login = ({location, history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]: \"/\";\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push(redirect);\r\n      }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(login(email, password))\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>SIGN IN</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Enter Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button className=\"mt-3\" type=\"submit\">\r\n            SIGN IN\r\n          </Button>\r\n        </Form>\r\n        <Col className=\"mt-2\">\r\n          New User ?\r\n          <Link to={redirect ? `register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default Login","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\FormContainer\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Register\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ShippingPage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\CheckoutSteps\\index.js",["179"],"import React from 'react'\r\nimport {Nav} from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n  return (\r\n    <>\r\n      <Nav className=\"justify-content-center mb-4\">\r\n        <Nav.Item>\r\n          {step1 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>SignIn</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>SignIn</Nav.Link>\r\n          )} \r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          {step2 ? (\r\n            <LinkContainer to=\"/shipping\">\r\n              <Nav.Link>Shipping</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Shipping</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {step3 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>Payment</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Payment</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {step4 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>Place Order</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Place Order</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n      </Nav>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default CheckoutSteps","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\PaymentPage\\index.js",["180"],"import React, {useState} from 'react'\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from '../../actions/cartAction'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\n\r\nconst PaymentPage = ({history}) => {\r\n      const cart = useSelector((state) => state.cart);\r\n      const { shippingAddress } = cart;\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('paypal')\r\n    const submitHandler = (e) => {\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder')\r\n    }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"paypal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"stripe\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button onClick={submitHandler}>Continue</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default PaymentPage","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderPage\\index.js",["181"],"import React, {useEffect} from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../../actions/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\n\r\nconst OrderPage = ({history}) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n  const addDecimal = (num) => {\r\n      return (Math.round(num*100)/100).toFixed(2);\r\n  }\r\n  cart.itemsPrice = addDecimal(cart.cartItems.reduce((acc,item) => acc+item.price * item.qty,0))\r\n  cart.shippingPrice = addDecimal(cart.cartItems > 500 ? 0 : 40)\r\n  cart.taxPrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const placeOrderHandler = () => {\r\n      dispatch(\r\n        createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        })\r\n      );\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(success){\r\n          history.push(`/order/${order._id}`)\r\n      }\r\n  }, [history, success])\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}&nbsp;\r\n                {cart.shippingAddress.city}&nbsp;\r\n                {cart.shippingAddress.postalCode}&nbsp;\r\n                {cart.shippingAddress.country}&nbsp;\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderDetailsPage\\index.js",["182"],"import React, {useState, useEffect} from 'react';\r\nimport {PayPalButton} from 'react-paypal-button-v2';\r\nimport {ORDER_PAY_RESET, ORDER_DELIVERED_RESET} from '../../constants/orderConstants'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { getOrderDetails, payOrder, deliverOrder } from \"../../actions/orderAction\";\r\n\r\nconst OrderDetailsPage = ({match, history}) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const orderPay = useSelector(state => state.orderPay)\r\n  const {loading: loadingPay, success: successpay} = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  useEffect(() => { \r\n    if(!userInfo){\r\n      history.push('/login')\r\n    }\r\n    const addPaypalScript = async() => {\r\n      const {data: clientId} = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true\r\n\r\n      script.onload = () =>{\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if(!order || successpay || successDeliver){\r\n      dispatch(getOrderDetails(orderId));\r\n      dispatch({ type: ORDER_PAY_RESET  });\r\n      dispatch({ type: ORDER_DELIVERED_RESET });\r\n    }else if(!order.isPaid){\r\n      if(!window.paypal){\r\n        addPaypalScript()\r\n      }\r\n    }else{\r\n      setSdkReady(true)\r\n    }\r\n  }, [dispatch, orderId, order, successpay, successDeliver])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}&nbsp;\r\n                {order.shippingAddress.city}&nbsp;\r\n                {order.shippingAddress.postalCode}&nbsp;\r\n                {order.shippingAddress.country}&nbsp;\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          {!order.isPaid && (\r\n            <ListGroup.Item>\r\n              {loadingPay && <Loader />}\r\n              {!sdkReady ? (\r\n                <Loader />\r\n              ) : (\r\n                <PayPalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={successPaymentHandler}\r\n                />\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n          {loadingDeliver && <Loader />}\r\n          {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n            <ListGroup.Item>\r\n              <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                Mark as Delivered\r\n              </Button>\r\n            </ListGroup.Item>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetailsPage;","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\UserList\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\UserEditPage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductListPage\\index.js",["183"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Nav, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport {  FaEdit, FaTrash, FaPlus } from \"react-icons/fa\";\r\nimport {\r\n  listProducts,\r\n  deleteProducts,\r\n  createProduct,\r\n} from \"../../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductListPage = ({ history, match}) => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\r\n\r\nconst productCreate = useSelector((state) => state.productCreate);\r\nconst {\r\n  loading: loadingCreate,\r\n  error: errorCreate,\r\n  success: successCreate,\r\n  product: createdProduct,\r\n} = productCreate;\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteProducts(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n      dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"my-3\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col>\r\n          <Button style={{ marginLeft: \"60%\" }} onClick={createProductHandler}>\r\n            <FaPlus /> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <FaEdit />\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    style={{ color: \"red\" }}\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <FaTrash style={{ color: \"white\" }} />\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductEditPage\\index.js",["184"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../../actions/productActions\"\r\nimport { PRODUCT_CREATE_RESET, PRODUCT_UPDATE_RESET } from \"../../constants/productConstants\";\r\n\r\nconst ProductEditPage = ({ location, match, history }) => {\r\n  const productId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success } = productUpdate;\r\n\r\n  useEffect(() => {\r\n      if(success){\r\n          dispatch({ type: PRODUCT_UPDATE_RESET })\r\n          history.push('/admin/productlist')\r\n      }else{\r\n        if (!product.name || product._id !== productId) {\r\n          dispatch(listProductDetails(productId));\r\n        } else {\r\n          setName(product.name);\r\n          setPrice(product.price);\r\n          setImage(product.image);\r\n          setBrand(product.brand);\r\n          setCategory(product.category);\r\n          setCountInStock(product.countInStock);\r\n          setDescription(product.description);\r\n        }\r\n      }     \r\n    }, [dispatch, history, productId, product, success]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try{\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    }catch(error){\r\n      console.log(error);\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description\r\n    }))\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productList\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image url\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File id='image-file' custom onChange={uploadFileHandler}></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>Count in Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Count in Stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label></Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditPage;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderList\\index.js",["185","186","187"],"import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { listOrders } from \"../../actions/orderAction\";\r\nimport { FaCheck, FaTimes, FaEdit, FaTrash } from \"react-icons/fa\";\r\n\r\nconst OrderListPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice}Rs</td>\r\n                {/* <td>{order.delivered}</td> */}\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <Nav.Link>\r\n                      <FaTimes style={{ color: \"red\" }} />\r\n                    </Nav.Link>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <Nav.Link>\r\n                      <FaTimes style={{ color: \"red\" }} />\r\n                    </Nav.Link>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                            Details\r\n                        </Button>\r\n                    </LinkContainer>\r\n                </td>  \r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListPage;\r\n",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":26,"column":9,"nodeType":"194","messageId":"195","endLine":26,"endColumn":24},{"ruleId":"188","replacedBy":"196"},{"ruleId":"190","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":2,"column":23,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"198","severity":1,"message":"202","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":2,"column":29,"nodeType":"200","messageId":"201","endLine":2,"endColumn":32},{"ruleId":"203","severity":1,"message":"204","line":51,"column":6,"nodeType":"205","endLine":51,"endColumn":24,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"207","line":78,"column":6,"nodeType":"205","endLine":78,"endColumn":60,"suggestions":"208"},{"ruleId":"198","severity":1,"message":"209","line":3,"column":25,"nodeType":"200","messageId":"201","endLine":3,"endColumn":28},{"ruleId":"198","severity":1,"message":"210","line":10,"column":10,"nodeType":"200","messageId":"201","endLine":10,"endColumn":30},{"ruleId":"198","severity":1,"message":"211","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":17},{"ruleId":"198","severity":1,"message":"212","line":8,"column":28,"nodeType":"200","messageId":"201","endLine":8,"endColumn":34},{"ruleId":"198","severity":1,"message":"213","line":8,"column":36,"nodeType":"200","messageId":"201","endLine":8,"endColumn":43},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["214"],["215"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["217"],"'Nav' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'FaCheck' is defined but never used.","'FaEdit' is defined but never used.","'FaTrash' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [history, order._id, success]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch, orderId, order, successpay, successDeliver, userInfo, history]",{"range":"224","text":"225"},[1628,1646],"[history, order._id, success]",[2569,2623],"[dispatch, orderId, order, successpay, successDeliver, userInfo, history]"]