[{"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\index.js":"1","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\App.js":"2","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Footer\\index.js":"4","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\NavBar\\index.js":"5","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Home\\index.js":"6","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\index.js":"7","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\rating.js":"8","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductDetails\\index.js":"9","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\data\\products.js":"10","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\store.js":"11","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\productReducer.js":"12","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Loader\\index.js":"15","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Message\\index.js":"16","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\CartPage\\index.js":"17","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\cartReducer.js":"18","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\cartAction.js":"20","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\userReducer.js":"21","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Login\\index.js":"23","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\userAction.js":"24","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\FormContainer\\index.js":"25","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Register\\index.js":"26","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProfilePage\\index.js":"27","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ShippingPage\\index.js":"28","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\CheckoutSteps\\index.js":"29","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\PaymentPage\\index.js":"30","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\orderReducer.js":"31","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderPage\\index.js":"33","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\orderAction.js":"34","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderDetailsPage\\index.js":"35"},{"size":646,"mtime":1628189073846,"results":"36","hashOfConfig":"37"},{"size":1544,"mtime":1628834063863,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":505,"mtime":1628418780855,"results":"40","hashOfConfig":"37"},{"size":2095,"mtime":1628421870573,"results":"41","hashOfConfig":"37"},{"size":1012,"mtime":1628225108038,"results":"42","hashOfConfig":"37"},{"size":874,"mtime":1628003565472,"results":"43","hashOfConfig":"37"},{"size":2457,"mtime":1628002737295,"results":"44","hashOfConfig":"37"},{"size":3298,"mtime":1628253379669,"results":"45","hashOfConfig":"37"},{"size":2520,"mtime":1627966809343,"results":"46","hashOfConfig":"37"},{"size":1815,"mtime":1628875589631,"results":"47","hashOfConfig":"37"},{"size":1403,"mtime":1628250875016,"results":"48","hashOfConfig":"37"},{"size":384,"mtime":1628250504503,"results":"49","hashOfConfig":"37"},{"size":1229,"mtime":1628251406539,"results":"50","hashOfConfig":"37"},{"size":313,"mtime":1628222291736,"results":"51","hashOfConfig":"37"},{"size":221,"mtime":1628434186238,"results":"52","hashOfConfig":"37"},{"size":3764,"mtime":1628347057239,"results":"53","hashOfConfig":"37"},{"size":1336,"mtime":1628740960973,"results":"54","hashOfConfig":"37"},{"size":240,"mtime":1628740263011,"results":"55","hashOfConfig":"37"},{"size":1235,"mtime":1628740886405,"results":"56","hashOfConfig":"37"},{"size":2350,"mtime":1634745611271,"results":"57","hashOfConfig":"37"},{"size":945,"mtime":1628913916528,"results":"58","hashOfConfig":"37"},{"size":2196,"mtime":1628789981939,"results":"59","hashOfConfig":"37"},{"size":3896,"mtime":1634464197221,"results":"60","hashOfConfig":"37"},{"size":368,"mtime":1628418427235,"results":"61","hashOfConfig":"37"},{"size":3369,"mtime":1628433967819,"results":"62","hashOfConfig":"37"},{"size":5742,"mtime":1634466484037,"results":"63","hashOfConfig":"37"},{"size":2659,"mtime":1628869949812,"results":"64","hashOfConfig":"37"},{"size":1416,"mtime":1628739621515,"results":"65","hashOfConfig":"37"},{"size":1710,"mtime":1628870029081,"results":"66","hashOfConfig":"37"},{"size":2429,"mtime":1628914284621,"results":"67","hashOfConfig":"37"},{"size":840,"mtime":1628913707943,"results":"68","hashOfConfig":"37"},{"size":5176,"mtime":1628834530102,"results":"69","hashOfConfig":"37"},{"size":3492,"mtime":1628914116128,"results":"70","hashOfConfig":"37"},{"size":6582,"mtime":1628857979583,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1u4fqdh",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\index.js",[],["151","152"],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\App.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Footer\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\NavBar\\index.js",["153"],"import React from \"react\";\r\nimport { Navbar, Container, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { FaShoppingCart, FaUser } from 'react-icons/fa';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './style.css';\r\nimport { logout } from \"../../actions/userAction\";\r\n\r\nconst NavBar = (props) => {\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n  const dispatch = useDispatch()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        className=\"nav-bar\"\r\n        bg=\"primary\"\r\n        expand=\"lg\"\r\n        variant=\"dark\"\r\n        collapseOnSelect\r\n        className=\"p-4\"\r\n      >\r\n        <Container fluid>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>E-Mart</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n          <Navbar.Collapse\r\n            className=\"justify-content-end\"\r\n            id=\"basic-navbar-nav\"\r\n          >\r\n            <Nav>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link className=\"navLink\">\r\n                  <FaShoppingCart />\r\n                  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link className=\"navLink\">\r\n                    <FaUser /> Signin\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Home\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Product\\rating.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProductDetails\\index.js",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport Rating from \"../Product/rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../../actions/productActions\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  Image,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { FaArrowAltCircleLeft } from \"react-icons/fa\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\n\r\nconst ProductDetails = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Link to=\"/\" className=\"btn btn-light \">\r\n            <FaArrowAltCircleLeft />\r\n            &nbsp; Go Back\r\n          </Link>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup vsriant=\"flush\">\r\n                <ListGroupItem>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    total={`${product.numReviews} Reviews`}\r\n                  />\r\n                </ListGroupItem>\r\n                <ListGroupItem>Price: {product.price}</ListGroupItem>\r\n                <ListGroupItem>{product.description}</ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Status: </Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock :(\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              {product.countInStock > 0 && (\r\n                <ListGroupItem>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <select\r\n                    default={1}\r\n                      value={qty}\r\n                      onChange={(e) => setQty(e.target.value)}\r\n                    >\r\n                      {[...Array(product.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </Row>\r\n                </ListGroupItem>\r\n              )}\r\n              <ListGroupItem>\r\n                <Button className=\"btn-block\" type=\"button\" onClick={addToCartHandler}>\r\n                  Add to Cart\r\n                </Button>\r\n              </ListGroupItem>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\data\\products.js",[],["155","156"],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\store.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Loader\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\Message\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\CartPage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\userReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Login\\index.js",["157"],"import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {login} from '../../actions/userAction'\r\nimport FormContainer from '../../components/FormContainer';\r\n\r\nconst Login = ({location, history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]: \"/\";\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n      if (userInfo) {\r\n        history.push(redirect);\r\n      }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(login(email, password))\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>SIGN IN</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Enter Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button className=\"mt-3\" type=\"submit\">\r\n            SIGN IN\r\n          </Button>\r\n        </Form>\r\n        <Col className=\"mt-2\">\r\n          New User ?\r\n          <Link to={redirect ? `register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default Login","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\FormContainer\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\Register\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ProfilePage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\ShippingPage\\index.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\components\\CheckoutSteps\\index.js",["158"],"import React from 'react'\r\nimport {Nav} from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n  return (\r\n    <>\r\n      <Nav className=\"justify-content-center mb-4\">\r\n        <Nav.Item>\r\n          {step1 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>SignIn</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>SignIn</Nav.Link>\r\n          )} \r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          {step2 ? (\r\n            <LinkContainer to=\"/shipping\">\r\n              <Nav.Link>Shipping</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Shipping</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {step3 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>Payment</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Payment</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {step4 ? (\r\n            <LinkContainer to=\"/login\">\r\n              <Nav.Link>Place Order</Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <Nav.Link disabled>Place Order</Nav.Link>\r\n          )}\r\n        </Nav.Item>\r\n      </Nav>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default CheckoutSteps","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\PaymentPage\\index.js",["159"],"import React, {useState} from 'react'\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from '../../actions/cartAction'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\n\r\nconst PaymentPage = ({history}) => {\r\n      const cart = useSelector((state) => state.cart);\r\n      const { shippingAddress } = cart;\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('paypal')\r\n    const submitHandler = (e) => {\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder')\r\n    }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Paypal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"paypal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"stripe\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n        <Button onClick={submitHandler}>Continue</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n }\r\n\r\nexport default PaymentPage","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderPage\\index.js",["160"],"import React, {useEffect} from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createOrder } from \"../../actions/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../../components/Message\";\r\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\r\n\r\nconst OrderPage = ({history}) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n  const addDecimal = (num) => {\r\n      return (Math.round(num*100)/100).toFixed(2);\r\n  }\r\n  cart.itemsPrice = addDecimal(cart.cartItems.reduce((acc,item) => acc+item.price * item.qty,0))\r\n  cart.shippingPrice = addDecimal(cart.cartItems > 500 ? 0 : 40)\r\n  cart.taxPrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const placeOrderHandler = () => {\r\n      dispatch(\r\n        createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        })\r\n      );\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(success){\r\n          history.push(`/order/${order._id}`)\r\n      }\r\n  }, [history, success])\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}&nbsp;\r\n                {cart.shippingAddress.city}&nbsp;\r\n                {cart.shippingAddress.postalCode}&nbsp;\r\n                {cart.shippingAddress.country}&nbsp;\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\KIIT\\Desktop\\e-mart\\frontend\\src\\pages\\OrderDetailsPage\\index.js",["161"],"import React, {useState, useEffect} from 'react';\r\nimport {PayPalButton} from 'react-paypal-button-v2';\r\nimport {ORDER_PAY_RESET} from '../../constants/orderConstants'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from \"../../components/Message\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../../actions/orderAction\";\r\n\r\nconst OrderDetailsPage = ({match}) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const orderPay = useSelector(state => state.orderPay)\r\n\r\n  const {loading: loadingPay, success: successpay} = orderPay\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const addPaypalScript = async() => {\r\n      const {data: clientId} = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true\r\n\r\n      script.onload = () =>{\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if(!order || successpay){\r\n      dispatch(getOrderDetails(orderId));\r\n      dispatch({ type: ORDER_PAY_RESET  });\r\n    }else if(!order.isPaid){\r\n      if(!window.paypal){\r\n        addPaypalScript()\r\n      }\r\n    }else{\r\n      setSdkReady(true)\r\n    }\r\n  }, [dispatch, orderId, order, successpay])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}&nbsp;\r\n                {order.shippingAddress.city}&nbsp;\r\n                {order.shippingAddress.postalCode}&nbsp;\r\n                {order.shippingAddress.country}&nbsp;\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          {!order.isPaid && (\r\n            <ListGroup.Item>\r\n              {loadingPay && <Loader />}\r\n              {!sdkReady ? (\r\n                <Loader />\r\n              ) : (\r\n                <PayPalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={successPaymentHandler}\r\n                />\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetailsPage;",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":26,"column":9,"nodeType":"168","messageId":"169","endLine":26,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":7},{"ruleId":"162","replacedBy":"174"},{"ruleId":"164","replacedBy":"175"},{"ruleId":"170","severity":1,"message":"176","line":2,"column":23,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"177","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"176","line":2,"column":29,"nodeType":"172","messageId":"173","endLine":2,"endColumn":32},{"ruleId":"178","severity":1,"message":"179","line":51,"column":6,"nodeType":"180","endLine":51,"endColumn":24,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":16},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar",["183"],["184"],"'Row' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [history, order._id, success]",{"range":"188","text":"189"},[1628,1646],"[history, order._id, success]"]